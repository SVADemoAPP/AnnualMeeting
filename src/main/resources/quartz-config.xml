<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
    http://www.springframework.org/schema/jee 
    http://www.springframework.org/schema/jee/spring-jee-4.0.xsd">
    
    <!-- 线程执行器配置，用于任务注册 -->
    <bean id="executor"
        class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10" />
        <property name="maxPoolSize" value="100" />
        <property name="queueCapacity" value="500" />
    </bean>     
    
    <!-- 要调用的工作类 -->
    <bean id="quartzJob" class="com.sva.common.QuartzJob"></bean> 
    
    <!--调度业务 : 定义调用对象和调用对象的方法 -->
    <bean id="jobtask1"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob" />        
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="doCreateTable" />
    </bean>
    
    <bean id="jobtask2"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob" />        
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="doStatisticData" />
    </bean>
    
    <bean id="jobtask3"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob" />        
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="doDeleteInfo" />
    </bean>

    <bean id="jobtask4"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob" />        
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="doStatisticOneHour" />
    </bean> 
       
    <!-- 定义触发时间 -->
    <bean id="doTime1" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask1" />        
        <!-- cron表达式 -->
        <!-- 每隔10秒执行一次 -->
        <property name="cronExpression" value="41 02 00 * * ?" />
    </bean> 
    
    <bean id="taskJobTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">        
        <property name="jobDetail" ref="jobtask1" />         
        <property name="repeatInterval" value="1000" />       
        <property name="repeatCount" value="0" />    
    </bean>
    
    <bean id="doTime2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask2" />
        <property name="cronExpression" value="01 59 23 * * ?" />
    </bean> 
     
    <bean id="doTime3" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask3" />
        <property name="cronExpression" value="1 45 23 * * ?" />
    </bean>
    
    <bean id="doTime4" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask4" />
        <property name="cronExpression" value="30 * * * * ?" />
    </bean>
    
    <!--设置调度 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 -->
    <bean id="startQuertz" lazy-init="false" autowire="no"
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="doTime1" />
            <!--<ref bean="doTime2" />-->
                <ref bean="doTime3" />
            </list>
        </property>
        <property name="taskExecutor" ref="executor" />
    </bean>
</beans>